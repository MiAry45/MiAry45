#include <bits/stdc++.h>
using namespace std;
int main(){
    // // greedy / two pointer approach
    // vector<int>vec{9,5,4,7,2,3,1,6};
    // sort(vec.begin(),vec.end()); // vector got sorted // 
    // int left = 0;
    // int target  = 14;
    // int right = vec.size()-1;
    // for(int i =0;i<vec.size();i++){
    //     if(vec[left] + vec[right]  >  14){
    //      right--;
    //     }
    //     else{
    //         left++;
    //     }
    //     if(vec[left] + vec[right] == 14){
    //             cout<<vec[left]<<" "<<vec[right]; //
    //             break;

    //     }
    // }
    // using hasing
    vector<int>vec{9,5,4,7,2,3,1,6};
    int target = 14;
    map<int,int>m1;
    for(int i =0;i < vec.size();i++){
        int k = vec[i];
        int ck = abs(target-vec[i]);
        if(m1.find(ck) != m1.end()){
            // ck exists
            cout<<ck<<" "<<vec[i];
            break;
        }
        m1[k] = i; 
    }


}
